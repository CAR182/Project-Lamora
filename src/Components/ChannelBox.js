/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useContext } from 'react';
import { useGLTF } from '@react-three/drei';
import { animated } from '@react-spring/three';
import GUIContext from 'GUIContext';
import objectPath from 'object-path';

export default function Model({ scale, position, positionY }) {
  const group = useRef();
  const { nodes, materials } = useGLTF('/ChannelBox.glb');
  const { data } = useContext(GUIContext);
  let { channelBoxColour } = objectPath.get(data, 'scene.messageQueue');
  return (
    <group position={position} ref={group} position-y={positionY} dispose={null}>
      <animated.mesh scale={scale}>
        <mesh castShadow receiveShadow geometry={nodes.ChannelBox.geometry} material={materials['SVGMat.006']}>
          <meshBasicMaterial color={channelBoxColour} toneMapped={false} />
        </mesh>
      </animated.mesh>
    </group>
  );
}
useGLTF.preload('/ChannelBox.glb');
